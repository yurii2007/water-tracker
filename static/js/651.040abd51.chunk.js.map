{"version":3,"file":"static/js/651.040abd51.chunk.js","mappings":"0PAsBA,MAAMA,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KAEJE,MAAM,sBACNC,IAAI,EAAG,0CACPC,IAAI,GAAI,oDACRC,SAAS,qBACTC,OACAC,QACC,2DACA,sBAEJC,SAAUR,EAAAA,KAEPK,SAAS,wBACTF,IAAI,EAAG,kDACPC,IAAI,GAAI,yDA2Eb,EAxEmBK,KACjB,MAAMC,GAAWC,EAAAA,EAAAA,OACX,cAAEC,EAAa,yBAAEC,IAA6BC,EAAAA,EAAAA,GAAkB,CACpE,YACA,cAaF,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAa,CAAAC,UACZC,EAAAA,EAAAA,MAACC,EAAAA,GAAW,CAAAF,SAAA,EACVF,EAAAA,EAAAA,KAACK,EAAAA,GAAK,CAAAH,SAAC,aACPF,EAAAA,EAAAA,KAACM,EAAAA,GAAM,CACLC,cAAe,CACbpB,MAAO,GACPM,SAAU,IAEZe,SApBaC,CAACC,EAAMC,KAAqB,IAAnB,UAAEC,GAAWD,EACzChB,GAASkB,EAAAA,EAAAA,IAAWH,IACjBI,SACAC,MAAK,KACJH,IACAI,IAAAA,OAAgBC,QAAQ,sCAAuC,CAAEC,QAAS,KAAO,IAElFC,OAAOC,IACNJ,IAAAA,OAAgBK,QAAQD,EAAO,CAAEF,QAAS,KAAO,GACjD,EAYElC,iBAAkBA,EAAiBkB,SAElCoB,IAA0B,IAAzB,OAAEC,EAAM,QAAEC,GAASF,EACnB,OACEnB,EAAAA,EAAAA,MAACsB,EAAAA,GAAI,CAAAvB,SAAA,EACHF,EAAAA,EAAAA,KAAC0B,EAAAA,GAAK,CAAAxB,SAAC,sBACPF,EAAAA,EAAAA,KAAC2B,EAAAA,GAAK,CAACC,OAAQL,EAAOpC,OAASqC,EAAQrC,MAAMe,UAC3CF,EAAAA,EAAAA,KAAC6B,EAAAA,GAAS,CACRD,OAAQL,EAAOpC,OAASqC,EAAQrC,MAChC2C,aAAa,MACbC,KAAK,QACLC,KAAK,QACLC,YAAY,cAGhBjC,EAAAA,EAAAA,KAACkC,EAAAA,GAAW,CAACH,KAAK,QAAQI,UAAU,SACpCnC,EAAAA,EAAAA,KAAC0B,EAAAA,GAAK,CAAAxB,SAAC,yBACPC,EAAAA,EAAAA,MAACwB,EAAAA,GAAK,CAACC,OAAQL,EAAO9B,UAAY+B,EAAQ/B,SAASS,SAAA,EACjDF,EAAAA,EAAAA,KAAC6B,EAAAA,GAAS,CACRD,OAAQL,EAAO9B,UAAY+B,EAAQ/B,SACnCqC,aAAa,MACbC,KAAK,WACLC,KAAMnC,EAAcuC,UAAY,OAAS,WACzCH,YAAY,cAEdjC,EAAAA,EAAAA,KAACqC,EAAAA,EAAkB,CACjBC,aAAczC,EAAcuC,UAC5BG,SAAUA,IAAMzC,EAAyB,mBAG7CE,EAAAA,EAAAA,KAACkC,EAAAA,GAAW,CAACH,KAAK,WAAWI,UAAU,SACvCnC,EAAAA,EAAAA,KAACwC,EAAAA,GAAO,CAACR,KAAK,SAAQ9B,SAAC,cAClB,KAIbC,EAAAA,EAAAA,MAACsC,EAAAA,GAAU,CAAAvC,SAAA,EACTF,EAAAA,EAAAA,KAAC0C,EAAAA,GAAO,CAACC,GAAG,mBAAkBzC,SAAC,sBAC/BF,EAAAA,EAAAA,KAAC0C,EAAAA,GAAO,CAACC,GAAG,UAASzC,SAAC,mBAGZ,ECvGpB,EAJmB0C,KACV5C,EAAAA,EAAAA,KAACN,EAAU,G","sources":["components/SignInForm/SignInForm.jsx","pages/SignInPage.jsx"],"sourcesContent":["import React from \"react\";\nimport * as yup from \"yup\";\nimport Notiflix from \"notiflix\";\nimport { Formik, Form } from \"formik\";\n\nimport {\n  AuthUpForma,\n  BtnSign,\n  ForgotLink,\n  FormContainer,\n  FormField,\n  Input,\n  Lable,\n  Linking,\n  StyledError,\n  Title,\n} from \"../SignUpForm/SignUpForm.styled\";\nimport { useDispatch } from \"react-redux\";\nimport { loginThunk } from \"../../redux/User/UserThunk\";\nimport { TogglePasswordIcon } from \"../TogglePasswordVisibility/TogglePasswordVisibility\";\nimport { usePasswordToggle } from \"../../Helpers/usePasswordToggle\";\n\nconst validationSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email(\"email is not valid\")\n    .min(6, \"the email must containe min six leters\")\n    .max(64, \"the email must containe maximum of 64 characters\")\n    .required(\"email is required\")\n    .trim()\n    .matches(\n      /^[a-zA-Z0-9]+[a-zA-Z0-9._-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9]+$/,\n      \"email is not valid\"\n    ),\n  password: yup\n    .string()\n    .required(\"password is required\")\n    .min(8, \"the password must containe min of 8 characters\")\n    .max(64, \"the password must containe maximum of 64 characters\"),\n});\n\nconst SignInForm = () => {\n  const dispatch = useDispatch();\n  const { showPasswords, togglePasswordVisibility } = usePasswordToggle([\n    \"password1\",\n    \"password2\",\n  ]);\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(loginThunk(values))\n      .unwrap()\n      .then(() => {\n        resetForm();\n        Notiflix.Notify.success(\"Welcome back! You're now logged in.\", { timeout: 1000 });\n      })\n      .catch((error) => {\n        Notiflix.Notify.failure(error, { timeout: 1000 });\n      });\n  };\n  return (\n    <FormContainer>\n      <AuthUpForma>\n        <Title>Sign In</Title>\n        <Formik\n          initialValues={{\n            email: \"\",\n            password: \"\",\n          }}\n          onSubmit={handleSubmit}\n          validationSchema={validationSchema}\n        >\n          {({ errors, touched }) => {\n            return (\n              <Form>\n                <Lable>Enter your email</Lable>\n                <Input $error={errors.email && touched.email}>\n                  <FormField\n                    $error={errors.email && touched.email}\n                    autoComplete=\"off\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"E-mail\"\n                  />\n                </Input>\n                <StyledError name=\"email\" component=\"div\" />\n                <Lable>Enter your password</Lable>\n                <Input $error={errors.password && touched.password}>\n                  <FormField\n                    $error={errors.password && touched.password}\n                    autoComplete=\"off\"\n                    name=\"password\"\n                    type={showPasswords.password1 ? \"text\" : \"password\"}\n                    placeholder=\"Password\"\n                  />\n                  <TogglePasswordIcon\n                    showPassword={showPasswords.password1}\n                    onToggle={() => togglePasswordVisibility(\"password1\")}\n                  />\n                </Input>\n                <StyledError name=\"password\" component=\"div\" />\n                <BtnSign type=\"submit\">Sign In</BtnSign>\n              </Form>\n            );\n          }}\n        </Formik>\n        <ForgotLink>\n          <Linking to=\"/forgot-password\">Forgot password?</Linking>\n          <Linking to=\"/signup\">Sign Up</Linking>\n        </ForgotLink>\n      </AuthUpForma>\n    </FormContainer>\n  );\n};\n\nexport default SignInForm;\n","import SignInForm from \"../components/SignInForm/SignInForm\";\n\nconst SignInPage = () => {\n  return <SignInForm />;\n};\n\nexport default SignInPage;\n"],"names":["validationSchema","yup","shape","email","min","max","required","trim","matches","password","SignInForm","dispatch","useDispatch","showPasswords","togglePasswordVisibility","usePasswordToggle","_jsx","FormContainer","children","_jsxs","AuthUpForma","Title","Formik","initialValues","onSubmit","handleSubmit","values","_ref","resetForm","loginThunk","unwrap","then","Notiflix","success","timeout","catch","error","failure","_ref2","errors","touched","Form","Lable","Input","$error","FormField","autoComplete","name","type","placeholder","StyledError","component","password1","TogglePasswordIcon","showPassword","onToggle","BtnSign","ForgotLink","Linking","to","SignInPage"],"sourceRoot":""}