{"version":3,"file":"static/js/778.30db284c.chunk.js","mappings":"6PAGO,MAAMA,EAAcC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2KASxBC,GAAWJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAYM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,oN,cCOpC,MAAMI,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KAEJE,MAAM,sBACNC,IAAI,EAAG,0CACPC,IAAI,GAAI,oDACRC,SAAS,qBACTC,OACAC,QACC,2DACA,wBA6DN,EAzD2BC,KACzB,MAAMC,GAAWC,EAAAA,EAAAA,MAajB,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,GAAa,CAAAD,UACZE,EAAAA,EAAAA,MAACC,EAAAA,GAAW,CAAAH,SAAA,EACVF,EAAAA,EAAAA,KAACM,EAAAA,GAAK,CAAAJ,SAAC,uBACPF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,gCACHF,EAAAA,EAAAA,KAACO,EAAAA,GAAM,CACLC,cAAe,CACbjB,MAAO,IAETkB,SArBWC,CAACC,EAAMC,KAAqB,IAAnB,UAAEC,GAAWD,EACzCd,GAASgB,EAAAA,EAAAA,IAAoBH,IAC1BI,SACAC,MAAK,KACJH,IACAI,IAAAA,OAAgBC,QAAQ,UAAW,CAAEC,QAAS,KAAO,IAEtDC,OAAOC,IACNJ,IAAAA,OAAgBK,QAAQD,EAAO,CAAEF,QAAS,KAAO,GACjD,EAaI/B,iBAAkBA,EAAiBc,SAElCqB,IAA0B,IAAzB,OAAEC,EAAM,QAAEC,GAASF,EACnB,OACEnB,EAAAA,EAAAA,MAACsB,EAAAA,GAAI,CAAAxB,SAAA,EACHF,EAAAA,EAAAA,KAAC2B,EAAAA,GAAK,CAAAzB,SAAC,sBACPF,EAAAA,EAAAA,KAAC4B,EAAAA,GAAK,CAACC,OAAQL,EAAOjC,OAASkC,EAAQlC,MAAMW,UAC3CF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAS,CACRD,OAAQL,EAAOjC,OAASkC,EAAQlC,MAEhCwC,KAAK,QACLC,KAAK,QACLC,YAAY,cAGhBjC,EAAAA,EAAAA,KAACkC,EAAAA,GAAW,CAACH,KAAK,QAAQI,UAAU,SAEpCnC,EAAAA,EAAAA,KAACoC,EAAAA,GAAO,CAACJ,KAAK,SAAQ9B,SAAC,WAClB,KAIbE,EAAAA,EAAAA,MAACxB,EAAW,CAAAsB,SAAA,EACVF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,qCACHF,EAAAA,EAAAA,KAACf,EAAQ,CAACoD,GAAG,UAASnC,SAAC,qBAI5B,EC/EP,EAJ2BoC,KAClBtC,EAAAA,EAAAA,KAACH,EAAkB,G","sources":["components/ForgotPasswordForm/ForgotPassword.styled.js","components/ForgotPasswordForm/ForgotPasswordForm.jsx","pages/ForgotPasswordPage.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const HaveAccount = styled.div`\n  display: inline-block;\n  margin-top: 100px;\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: initial;\n    gap: 20px;\n  }\n`;\nexport const Linkings = styled(Link)`\n  color: var(--primary-blue);\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 20px;\n  outline: none;\n  &:hover,\n  &:focus {\n    color: var(--secondary-yellow);\n  }\n`;\n","import React from \"react\";\nimport * as yup from \"yup\";\nimport Notiflix from \"notiflix\";\nimport { Formik, Form } from \"formik\";\n\nimport {\n  AuthUpForma,\n  BtnSign,\n  FormContainer,\n  FormField,\n  Input,\n  Lable,\n  StyledError,\n  Title,\n} from \"../SignUpForm/SignUpForm.styled\";\nimport { useDispatch } from \"react-redux\";\nimport { forgotPasswordThunk } from \"../../redux/User/UserThunk\";\nimport { HaveAccount, Linkings } from \"./ForgotPassword.styled\";\n\nconst validationSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email(\"email is not valid\")\n    .min(6, \"the email must containe min six leters\")\n    .max(64, \"the email must containe maximum of 64 characters\")\n    .required(\"email is required\")\n    .trim()\n    .matches(\n      /^[a-zA-Z0-9]+[a-zA-Z0-9._-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9]+$/,\n      \"email is not valid\"\n    ),\n});\n\nconst ForgotPasswordForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(forgotPasswordThunk(values))\n      .unwrap()\n      .then(() => {\n        resetForm();\n        Notiflix.Notify.success(\"success\", { timeout: 1000 });\n      })\n      .catch((error) => {\n        Notiflix.Notify.failure(error, { timeout: 1000 });\n      });\n  };\n  return (\n    <>\n      <FormContainer>\n        <AuthUpForma>\n          <Title>Forgot Password ?</Title>\n          <p>We will send you an email </p>\n          <Formik\n            initialValues={{\n              email: \"\",\n            }}\n            onSubmit={handleSubmit}\n            validationSchema={validationSchema}\n          >\n            {({ errors, touched }) => {\n              return (\n                <Form>\n                  <Lable>Enter your email</Lable>\n                  <Input $error={errors.email && touched.email}>\n                    <FormField\n                      $error={errors.email && touched.email}\n                      // autoComplete=\"off\"\n                      name=\"email\"\n                      type=\"email\"\n                      placeholder=\"E-mail\"\n                    />\n                  </Input>\n                  <StyledError name=\"email\" component=\"div\" />\n\n                  <BtnSign type=\"submit\">Send</BtnSign>\n                </Form>\n              );\n            }}\n          </Formik>\n          <HaveAccount>\n            <p>Do you already have an account?</p>\n            <Linkings to=\"/signin\">Sign in</Linkings>\n          </HaveAccount>\n        </AuthUpForma>\n      </FormContainer>\n    </>\n  );\n};\n\nexport default ForgotPasswordForm;\n","import React from \"react\";\nimport ForgotPasswordForm from \"../components/ForgotPasswordForm/ForgotPasswordForm\";\n\nconst ForgotPasswordPage = () => {\n  return <ForgotPasswordForm />;\n};\n\nexport default ForgotPasswordPage;\n"],"names":["HaveAccount","styled","div","_templateObject","_taggedTemplateLiteral","Linkings","Link","_templateObject2","validationSchema","yup","shape","email","min","max","required","trim","matches","ForgotPasswordForm","dispatch","useDispatch","_jsx","_Fragment","children","FormContainer","_jsxs","AuthUpForma","Title","Formik","initialValues","onSubmit","handleSubmit","values","_ref","resetForm","forgotPasswordThunk","unwrap","then","Notiflix","success","timeout","catch","error","failure","_ref2","errors","touched","Form","Lable","Input","$error","FormField","name","type","placeholder","StyledError","component","BtnSign","to","ForgotPasswordPage"],"sourceRoot":""}