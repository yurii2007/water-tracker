{"version":3,"file":"static/js/410.2d94d962.chunk.js","mappings":"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","sources":["components/WaterRatioPanel/WaterRatioPanel.styled.js","components/WaterRatioPanel/WaterRatioPanel.jsx","constants/months.js","components/MonthStatsTable/MonthStatsTable.styled.js","components/MonthStatsTable/MonthCalendar.jsx","images/svg/month_arrow_left.svg","images/svg/month_arrow_right.svg","components/MonthStatsTable/MothHeader.jsx","components/MonthStatsTable/MonthStatsTable.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const TextPercentage = styled.span`\n  position: absolute;\n  top: 96%;\n  left: ${(props) => props.percentPosition}%;\n  transform: translateX(-50%);\n  color: var(--primary-blue);\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n`;\n\nexport const ContainerWater = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 24px;\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n\nexport const TodayText = styled.p`\n  color: var(--primary-blue);\n  font-size: 18px;\n  line-height: 1.3;\n`;\n\nexport const InputRange = styled.input`\n  &[type=\"range\"] {\n    width: 256px;\n    height: 8px;\n    border-radius: 10px;\n    appearance: none;\n    background: linear-gradient(\n      to right,\n      #9ebbff 0%,\n      #9ebbff ${(props) => props.value}%,\n      #d7e3ff ${(props) => props.value}%,\n      #d7e3ff 100%\n    );\n  }\n`;\n\nexport const WrapperPercentage = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  span {\n    color: var(--primary-blue);\n\n    font-size: 12px;\n    line-height: 1.3;\n    position: relative;\n\n    &::before {\n      display: flex;\n      content: \"|\";\n      color: blue;\n      justify-content: center;\n      align-items: center;\n    }\n  }\n`;\n\nexport const AddBtn = styled.button`\n  width: 178px;\n  display: inline-flex;\n  padding: 10px 30px;\n  justify-content: center;\n  align-items: center;\n  height: 44px;\n  gap: 10px;\n  border-radius: 10px;\n  border: none;\n  background-color: var(--primary-blue);\n  color: var(--white-color);\n  box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n\n  svg {\n    stroke: var(--white-color);\n  }\n\n  &:hover,\n  &:focus {\n    color: var(--secondary-yellow);\n\n    svg {\n      stroke: var(--secondary-yellow);\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport { useModal } from \"../ModalContext/ModalContextProvider\";\nimport { ReactComponent as AddIcon } from \"../../images/svg/plus_circle.svg\";\nimport {\n  AddBtn,\n  ContainerWater,\n  InputContainer,\n  InputRange,\n  TextPercentage,\n  TodayText,\n  WrapperPercentage,\n} from \"./WaterRatioPanel.styled\";\nimport { modalNames } from \"../../constants/modals\";\n\nconst WaterRatioPanel = () => {\n  const [water, setWater] = useState(0);\n  const [inputValue, setInputValue] = useState(0);\n  const { openModal } = useModal();\n\n  const handleChange = (evt) => {\n    const value = parseInt((1250 / 2000) * 100);\n    console.log(value);\n    //Формула ((к-сть випитої води(із мого модального вікна)/добова норма води) * 100)\n    setWater(value);\n    setInputValue(parseInt(evt.target.value));\n  };\n\n  return (\n    <ContainerWater>\n      <InputContainer>\n        <TodayText>Today</TodayText>\n        <InputRange\n          type=\"range\"\n          min=\"0\"\n          max=\"100\"\n          value={inputValue}\n          onChange={handleChange}\n        />\n        <WrapperPercentage>\n          <span>0%</span>\n          <span>100%</span>\n        </WrapperPercentage>\n        <TextPercentage $percentPosition={inputValue}>{water}%</TextPercentage>\n      </InputContainer>\n      <AddBtn onClick={() => openModal(modalNames.todayList)} type=\"button\">\n        <AddIcon aria-label=\"add_water\" />\n        Add water\n      </AddBtn>\n    </ContainerWater>\n  );\n};\n\nexport default WaterRatioPanel;\n","export const months = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n","import styled from \"styled-components\";\n\nexport const MonthHeading = styled.p`\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 30px;\n  letter-spacing: 0em;\n  text-align: left;\n  color: var(--primary-black);\n`;\n\nexport const DivHeadingWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const DivMonthSwitcher = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  .arrow {\n    background: transparent;\n    border: none;\n    padding: 0;\n    width: 14px;\n    height: 14px;\n  }\n  .month__name {\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 20px;\n    letter-spacing: 0em;\n    text-align: center;\n    color: var(--primary-blue);\n  }\n`;\n\nexport const UlMonth = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: 16px 26px;\n  margin-top: 16px;\n  list-style: none;\n`;\n\nexport const LiDayStyles = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  text-align: center;\n  font-weight: 400;\n  letter-spacing: 0em;\n  span {\n    display: block;\n  }\n  .day {\n    font-size: 16px;\n    line-height: 20px;\n\n    padding: ${({ $percentage }) => ($percentage < 100 ? \"7px 6px\" : \"7px\")};\n    background: var(--white-color);\n    border-radius: 50%;\n    border: none;\n    border: ${({ $percentage }) =>\n      $percentage < 100 ? \"1px solid var(--secondary-yellow)\" : \"none\"};\n  }\n  .percentage {\n    font-size: 10px;\n    line-height: 16px;\n    color: var(--secondary-skyblue);\n  }\n`;\n","import { LiDayStyles, UlMonth } from \"./MonthStatsTable.styled\";\n\nconst MonthCalendar = ({ monthData }) => {\n  return (\n    <UlMonth>\n      {monthData.map((dayInfo) => (\n        <LiDayStyles $percentage={dayInfo.percent} key={dayInfo.date.day}>\n          <span className=\"day\">{dayInfo.date.day}</span>\n          <span className=\"percentage\">{dayInfo.percent || 0}&#37;</span>\n        </LiDayStyles>\n      ))}\n    </UlMonth>\n  );\n};\n\nexport default MonthCalendar;\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgMonthArrowLeft(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 14,\n    height: 14,\n    viewBox: \"0 0 14 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M4.50344 7.30915C4.42151 7.22712 4.37549 7.11593 4.37549 6.99999C4.37549 6.88405 4.42151 6.77285 4.50344 6.69082L8.87844 2.31582C8.91849 2.27284 8.96679 2.23836 9.02046 2.21445C9.07412 2.19054 9.13206 2.17768 9.1908 2.17664C9.24954 2.17561 9.30789 2.18641 9.36237 2.20842C9.41684 2.23042 9.46633 2.26317 9.50788 2.30472C9.54942 2.34626 9.58217 2.39575 9.60417 2.45022C9.62618 2.5047 9.63698 2.56305 9.63595 2.62179C9.63491 2.68054 9.62205 2.73847 9.59814 2.79214C9.57423 2.8458 9.53975 2.8941 9.49677 2.93415L5.43094 6.99999L9.49677 11.0658C9.53975 11.1059 9.57423 11.1542 9.59814 11.2078C9.62205 11.2615 9.63491 11.3194 9.63595 11.3782C9.63698 11.4369 9.62618 11.4953 9.60417 11.5498C9.58217 11.6042 9.54942 11.6537 9.50788 11.6953C9.46633 11.7368 9.41684 11.7696 9.36237 11.7916C9.30789 11.8136 9.24954 11.8244 9.1908 11.8233C9.13206 11.8223 9.07412 11.8094 9.02046 11.7855C8.96679 11.7616 8.91849 11.7271 8.87844 11.6842L4.50344 7.30915Z\",\n    fill: \"#407BFF\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgMonthArrowLeft);\nexport default __webpack_public_path__ + \"static/media/month_arrow_left.4d5a4b9d3d82aed951ce3cf791ed3a97.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgMonthArrowRight(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 14,\n    height: 14,\n    viewBox: \"0 0 14 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M9.49656 7.30915C9.57849 7.22712 9.62451 7.11593 9.62451 6.99999C9.62451 6.88405 9.57849 6.77285 9.49656 6.69082L5.12156 2.31582C5.08151 2.27284 5.03321 2.23836 4.97954 2.21445C4.92588 2.19054 4.86794 2.17768 4.8092 2.17664C4.75046 2.17561 4.69211 2.18641 4.63763 2.20842C4.58316 2.23042 4.53367 2.26317 4.49212 2.30472C4.45058 2.34626 4.41783 2.39575 4.39583 2.45022C4.37382 2.5047 4.36302 2.56305 4.36405 2.62179C4.36509 2.68054 4.37795 2.73847 4.40186 2.79214C4.42577 2.8458 4.46025 2.8941 4.50323 2.93415L8.56906 6.99999L4.50323 11.0658C4.46025 11.1059 4.42577 11.1542 4.40186 11.2078C4.37795 11.2615 4.36509 11.3194 4.36405 11.3782C4.36302 11.4369 4.37382 11.4953 4.39583 11.5498C4.41783 11.6042 4.45058 11.6537 4.49212 11.6953C4.53367 11.7368 4.58316 11.7696 4.63763 11.7916C4.69211 11.8136 4.75046 11.8244 4.8092 11.8233C4.86794 11.8223 4.92588 11.8094 4.97954 11.7855C5.03321 11.7616 5.08151 11.7271 5.12156 11.6842L9.49656 7.30915Z\",\n    fill: \"#407BFF\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgMonthArrowRight);\nexport default __webpack_public_path__ + \"static/media/month_arrow_right.6e5168c3db019e6e3101c036f6427faf.svg\";\nexport { ForwardRef as ReactComponent };","import { ReactComponent as LeftArrow } from \"../../images/svg/month_arrow_left.svg\";\nimport { ReactComponent as RightArrow } from \"../../images/svg/month_arrow_right.svg\";\nimport {\n  MonthHeading,\n  DivHeadingWrapper,\n  DivMonthSwitcher,\n} from \"./MonthStatsTable.styled\";\n\nconst MonthHeader = ({ changeDirection, month }) => {\n  return (\n    <DivHeadingWrapper>\n      <MonthHeading>Month</MonthHeading>\n      <DivMonthSwitcher>\n        <button className=\"arrow\" onClick={() => changeDirection(-1)} type=\"button\">\n          <LeftArrow />\n        </button>\n        <p className=\"month__name\">{month}</p>\n        <button className=\"arrow\" onClick={() => changeDirection(1)} type=\"button\">\n          <RightArrow />\n        </button>\n      </DivMonthSwitcher>\n    </DivHeadingWrapper>\n  );\n};\n\nexport default MonthHeader;\n","import { useCallback, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { getMonthInfoThunk } from \"../../redux/Water/WaterThunk\";\nimport { selectMonthInfo } from \"../../redux/selectors\";\nimport { months } from \"../../constants/months\";\n\nimport MonthCalendar from \"./MonthCalendar\";\nimport MonthHeader from \"./MothHeader\";\n\nlet currentDate = new Date();\n\nconst MonthStatsTable = () => {\n  const [currentMonth, setCurrentMonth] = useState(currentDate.getMonth());\n  const monthData = useSelector(selectMonthInfo);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getMonthInfoThunk(currentDate));\n  }, [dispatch, currentMonth]);\n\n  const changeMonth = useCallback(\n    (direction) => {\n      currentDate = new Date(currentDate.getFullYear(), currentMonth);\n      setCurrentMonth(currentDate.getMonth() + direction);\n    },\n    [currentMonth]\n  );\n\n  const getCurrentMonth = useCallback(() => {\n    if (currentMonth === 12) {\n      return [months[0]];\n    }\n    if (currentMonth === -1) {\n      return [months[11]];\n    }\n    return months[currentMonth];\n  }, [currentMonth]);\n\n  return (\n    <div>\n      <MonthHeader changeDirection={changeMonth} month={getCurrentMonth()} />\n      <MonthCalendar monthData={monthData} />\n    </div>\n  );\n};\n\nexport default MonthStatsTable;\n","import WaterRatioPanel from \"../../components/WaterRatioPanel/WaterRatioPanel\";\nimport MonthStatsTable from \"../../components/MonthStatsTable/MonthStatsTable\";\n\nconst HomePage = () => {\n  return (\n    <div>\n      <section>\n        <WaterRatioPanel />\n      </section>\n      <section>\n        <MonthStatsTable />\n      </section>\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"names":["TextPercentage","styled","span","_templateObject","_taggedTemplateLiteral","props","percentPosition","ContainerWater","div","_templateObject2","InputContainer","_templateObject3","TodayText","p","_templateObject4","InputRange","input","_templateObject5","value","WrapperPercentage","_templateObject6","AddBtn","button","_templateObject7","WaterRatioPanel","water","setWater","useState","inputValue","setInputValue","openModal","useModal","_jsxs","children","_jsx","type","min","max","onChange","evt","parseInt","console","log","target","$percentPosition","onClick","modalNames","todayList","AddIcon","months","MonthHeading","DivHeadingWrapper","DivMonthSwitcher","UlMonth","ul","LiDayStyles","li","_ref","$percentage","_ref2","monthData","map","dayInfo","percent","className","date","day","_path","_extends","Object","assign","bind","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgMonthArrowLeft","svgRef","title","titleId","width","height","viewBox","fill","xmlns","ref","id","fillRule","clipRule","d","ForwardRef","SvgMonthArrowRight","changeDirection","month","LeftArrow","RightArrow","currentDate","Date","MonthStatsTable","currentMonth","setCurrentMonth","getMonth","useSelector","selectMonthInfo","dispatch","useDispatch","useEffect","getMonthInfoThunk","changeMonth","useCallback","direction","getFullYear","getCurrentMonth","MonthHeader","MonthCalendar","HomePage"],"sourceRoot":""}